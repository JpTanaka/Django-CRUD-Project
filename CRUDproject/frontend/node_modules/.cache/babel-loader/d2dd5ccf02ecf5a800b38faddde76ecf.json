{"ast":null,"code":"var _jsxFileName = \"/home/nakatinha/repos/djangoprojects/CRUD/CRUDproject/frontend/src/components/ListAddresses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CardAddress from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListAddresses(props) {\n  _s();\n\n  const [listaddresses, setListAddresses] = useState();\n  useEffect(() => {\n    console.log(\"useEffect ListAddresses\");\n\n    const makeGETRequest = async () => {\n      try {\n        let res = await fetch(\"http://localhost:8000/api/list\", {\n          method: \"GET\"\n        });\n        let resJson = await res.json();\n\n        if (res.status === 200) {\n          console.log(resJson);\n          setListAddresses(JSON.stringify(resJson));\n        } else {}\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    makeGETRequest();\n  }, [props.count]); // async function makeGETRequest() {\n  // }\n\n  const listcards = listaddresses.map(address => /*#__PURE__*/_jsxDEV(CardAddress, {\n    address: address\n  }, address.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: listcards\n  }, void 0, false);\n}\n\n_s(ListAddresses, \"v0NEuiQgjYql0A1ikAxO7YLstbk=\");\n\n_c = ListAddresses;\nexport default ListAddresses;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListAddresses\");","map":{"version":3,"names":["React","useState","useEffect","CardAddress","ListAddresses","props","listaddresses","setListAddresses","console","log","makeGETRequest","res","fetch","method","resJson","json","status","JSON","stringify","err","count","listcards","map","address","id"],"sources":["/home/nakatinha/repos/djangoprojects/CRUD/CRUDproject/frontend/src/components/ListAddresses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport CardAddress from './Card';\n\nfunction ListAddresses(props) {\n    const [listaddresses, setListAddresses] = useState();\n\n    useEffect (() => {\n        console.log(\"useEffect ListAddresses\")\n        const makeGETRequest = async () => {\n        try {\n          let res = await fetch(\"http://localhost:8000/api/list\", {\n            method: \"GET\",\n          });\n          let resJson = await res.json();\n          if (res.status === 200) {\n            console.log(resJson);\n            setListAddresses(JSON.stringify(resJson));\n          } else {   \n          }\n        } catch (err) {\n          console.log(err);\n        }\n      };\n      makeGETRequest();\n    }, [props.count]\n    )\n    // async function makeGETRequest() {\n        \n    // }\n\n    const listcards = listaddresses.map((address) => \n      <CardAddress address = {address} key = {address.id} />\n\n    )\n    \n    return (\n    <>\n        {listcards}\n    </>\n    )\n}\n\nexport default ListAddresses"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,QAAxB;;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAC1B,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,EAAlD;EAEAC,SAAS,CAAE,MAAM;IACbM,OAAO,CAACC,GAAR,CAAY,yBAAZ;;IACA,MAAMC,cAAc,GAAG,YAAY;MACnC,IAAI;QACF,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;UACtDC,MAAM,EAAE;QAD8C,CAAnC,CAArB;QAGA,IAAIC,OAAO,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAApB;;QACA,IAAIJ,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;UACtBR,OAAO,CAACC,GAAR,CAAYK,OAAZ;UACAP,gBAAgB,CAACU,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAD,CAAhB;QACD,CAHD,MAGO,CACN;MACF,CAVD,CAUE,OAAOK,GAAP,EAAY;QACZX,OAAO,CAACC,GAAR,CAAYU,GAAZ;MACD;IACF,CAdC;;IAeFT,cAAc;EACf,CAlBQ,EAkBN,CAACL,KAAK,CAACe,KAAP,CAlBM,CAAT,CAH0B,CAuB1B;EAEA;;EAEA,MAAMC,SAAS,GAAGf,aAAa,CAACgB,GAAd,CAAmBC,OAAD,iBAClC,QAAC,WAAD;IAAa,OAAO,EAAIA;EAAxB,GAAwCA,OAAO,CAACC,EAAhD;IAAA;IAAA;IAAA;EAAA,QADgB,CAAlB;EAKA,oBACA;IAAA,UACKH;EADL,iBADA;AAKH;;GArCQjB,a;;KAAAA,a;AAuCT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}