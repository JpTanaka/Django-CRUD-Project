{"ast":null,"code":"var _jsxFileName = \"/home/nakatinha/repos/djangoprojects/CRUD/CRUDproject/frontend/src/components/Forms.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Forms(props) {\n  _s();\n\n  const [cep, setCep] = useState(\"\");\n\n  let handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(\"https://brasilapi.com.br/api/cep/v1/\" + cep, {\n        method: \"GET\"\n      });\n      let resJson = await res.json();\n\n      if (res.status === 200) {\n        makePOSTRequest(cep, resJson[\"street\"], resJson[\"neighborhood\"], resJson[\"city\"] + \"/\" + resJson[\"state\"]);\n        setCep(\"\");\n        props.setCount(count => count + 1);\n      } else {\n        alert(\"CEP não encontrado.\");\n        setCep(\"\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  function makePOSTRequest(cep, name, district, region) {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        CEP: cep,\n        name: name,\n        district: district,\n        region: region\n      })\n    };\n    fetch('http://localhost:8000/api/list', requestOptions).then(response => response.json()).then(data => console.log(data));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-page\",\n      children: \"Consulte seu CEP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forms\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"CEP\",\n              value: cep,\n              placeholder: \"Ex.: 12345678\",\n              onChange: e => setCep(e.target.value),\n              className: \"input-cep\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button-9\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Forms, \"cAjtRL/n/6AXS1mKDiQGrKkRfII=\");\n\n_c = Forms;\nexport default Forms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"names":["React","useState","Forms","props","cep","setCep","handleSubmit","e","preventDefault","res","fetch","method","resJson","json","status","makePOSTRequest","setCount","count","alert","err","console","log","name","district","region","requestOptions","headers","body","JSON","stringify","CEP","then","response","data","target","value"],"sources":["/home/nakatinha/repos/djangoprojects/CRUD/CRUDproject/frontend/src/components/Forms.js"],"sourcesContent":["import React, { useState } from 'react'\n\nfunction Forms(props) {\n    const [cep, setCep] = useState(\"\");\n\n    let handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n          let res = await fetch(\"https://brasilapi.com.br/api/cep/v1/\"+cep, {\n            method: \"GET\",\n          });\n          let resJson = await res.json();\n          if (res.status === 200) {\n            makePOSTRequest(cep, resJson[\"street\"], resJson[\"neighborhood\"], resJson[\"city\"]+\"/\"+resJson[\"state\"])\n            setCep(\"\")\n            props.setCount(count => count+1);\n          } else {\n            alert(\"CEP não encontrado.\");\n            setCep(\"\");\n          }\n        } catch (err) {\n            \n          console.log(err);\n        }\n\n      };\n\n    function makePOSTRequest(cep, name, district, region) {\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type':'application/json'},\n            body: JSON.stringify({\n                CEP: cep,\n                name: name,\n                district: district,\n                region: region,\n            }\n            )\n\n        };\n        fetch('http://localhost:8000/api/list', requestOptions).then((response) =>\n        response.json()\n        ).then((data)=> console.log(data));\n    }\n\n    return(\n        <div className=\"wrapper\">\n        <div className=\"title-page\">\n            Consulte seu CEP\n        </div>\n        <form onSubmit={handleSubmit}>\n            \n        <fieldset>\n            <div className=\"forms\">\n            <label>\n            <input name=\"CEP\" value={cep} placeholder='Ex.: 12345678' \n            onChange={(e) => setCep(e.target.value)} className=\"input-cep\"/>\n            </label>\n            <button type=\"submit\" className='button-9'>Submit</button>   \n            </div>\n        </fieldset>\n        </form>\n        </div>\n    )\n}\n\nexport default Forms"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAAA;;EAClB,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,EAAD,CAA9B;;EAEA,IAAIK,YAAY,GAAG,MAAOC,CAAP,IAAa;IAC5BA,CAAC,CAACC,cAAF;;IACA,IAAI;MACF,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,yCAAuCN,GAAxC,EAA6C;QAChEO,MAAM,EAAE;MADwD,CAA7C,CAArB;MAGA,IAAIC,OAAO,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAApB;;MACA,IAAIJ,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;QACtBC,eAAe,CAACX,GAAD,EAAMQ,OAAO,CAAC,QAAD,CAAb,EAAyBA,OAAO,CAAC,cAAD,CAAhC,EAAkDA,OAAO,CAAC,MAAD,CAAP,GAAgB,GAAhB,GAAoBA,OAAO,CAAC,OAAD,CAA7E,CAAf;QACAP,MAAM,CAAC,EAAD,CAAN;QACAF,KAAK,CAACa,QAAN,CAAeC,KAAK,IAAIA,KAAK,GAAC,CAA9B;MACD,CAJD,MAIO;QACLC,KAAK,CAAC,qBAAD,CAAL;QACAb,MAAM,CAAC,EAAD,CAAN;MACD;IACF,CAbD,CAaE,OAAOc,GAAP,EAAY;MAEZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD;EAEF,CApBH;;EAsBA,SAASJ,eAAT,CAAyBX,GAAzB,EAA8BkB,IAA9B,EAAoCC,QAApC,EAA8CC,MAA9C,EAAsD;IAClD,MAAMC,cAAc,GAAG;MACnBd,MAAM,EAAE,MADW;MAEnBe,OAAO,EAAE;QAAC,gBAAe;MAAhB,CAFU;MAGnBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBC,GAAG,EAAE1B,GADY;QAEjBkB,IAAI,EAAEA,IAFW;QAGjBC,QAAQ,EAAEA,QAHO;QAIjBC,MAAM,EAAEA;MAJS,CAAf;IAHa,CAAvB;IAYAd,KAAK,CAAC,gCAAD,EAAmCe,cAAnC,CAAL,CAAwDM,IAAxD,CAA8DC,QAAD,IAC7DA,QAAQ,CAACnB,IAAT,EADA,EAEEkB,IAFF,CAEQE,IAAD,IAASb,OAAO,CAACC,GAAR,CAAYY,IAAZ,CAFhB;EAGH;;EAED,oBACI;IAAK,SAAS,EAAC,SAAf;IAAA,wBACA;MAAK,SAAS,EAAC,YAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAIA;MAAM,QAAQ,EAAE3B,YAAhB;MAAA,uBAEA;QAAA,uBACI;UAAK,SAAS,EAAC,OAAf;UAAA,wBACA;YAAA,uBACA;cAAO,IAAI,EAAC,KAAZ;cAAkB,KAAK,EAAEF,GAAzB;cAA8B,WAAW,EAAC,eAA1C;cACA,QAAQ,EAAGG,CAAD,IAAOF,MAAM,CAACE,CAAC,CAAC2B,MAAF,CAASC,KAAV,CADvB;cACyC,SAAS,EAAC;YADnD;cAAA;cAAA;cAAA;YAAA;UADA;YAAA;YAAA;YAAA;UAAA,QADA,eAKA;YAAQ,IAAI,EAAC,QAAb;YAAsB,SAAS,EAAC,UAAhC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IAFA;MAAA;MAAA;MAAA;IAAA,QAJA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;GA9DQjC,K;;KAAAA,K;AAgET,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}