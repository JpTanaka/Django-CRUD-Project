{"ast":null,"code":"var _jsxFileName = \"/home/nakatinha/repos/djangoprojects/CRUD/CRUDproject/frontend/src/App.js\";\nimport './App.css';\nimport Teste from './components/Test';\nimport Forms from './components/Forms';\nimport ListAddresses from './components/ListAddresses.js';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // function refreshList() {\n  //   const makeGETRequest = async () => {\n  //     try {\n  //       let res = await fetch(\"http://localhost:8000/api/list\", {\n  //         method: \"GET\",\n  //       });\n  //       let resJson = await res.json();\n  //       if (res.status === 200) {\n  //         console.log(typeof(resJson));\n  //         setListAddresses(Object.entries(resJson));\n  //       } else {   \n  //       }\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  //   makeGETRequest();\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Forms, {\n      count: count,\n      setCount: setCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ListAddresses, {\n      count: count,\n      setCount: setCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Teste","Forms","ListAddresses","useState","App","count","setCount"],"sources":["/home/nakatinha/repos/djangoprojects/CRUD/CRUDproject/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport Teste from './components/Test';\nimport Forms from './components/Forms'\nimport ListAddresses from './components/ListAddresses.js'\nimport { useState } from 'react';\n\nfunction App() {\n  \n\n  // function refreshList() {\n  //   const makeGETRequest = async () => {\n  //     try {\n  //       let res = await fetch(\"http://localhost:8000/api/list\", {\n  //         method: \"GET\",\n  //       });\n  //       let resJson = await res.json();\n  //       if (res.status === 200) {\n  //         console.log(typeof(resJson));\n  //         setListAddresses(Object.entries(resJson));\n  //       } else {   \n  //       }\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  //   makeGETRequest();\n  // }\n  return (\n    <>\n    <Forms count = {count} setCount = {setCount} />\n    <ListAddresses count = {count} setCount = {setCount}/>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,GAAT,GAAe;EAGb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACE;IAAA,wBACA,QAAC,KAAD;MAAO,KAAK,EAAIC,KAAhB;MAAuB,QAAQ,EAAIC;IAAnC;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,aAAD;MAAe,KAAK,EAAID,KAAxB;MAA+B,QAAQ,EAAIC;IAA3C;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA,gBADF;AAMD;;KA3BQF,G;AA6BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}