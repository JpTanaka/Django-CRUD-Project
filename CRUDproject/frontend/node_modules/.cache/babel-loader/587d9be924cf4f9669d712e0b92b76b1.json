{"ast":null,"code":"var _jsxFileName = \"/home/nakatinha/repos/djangoprojects/CRUD/CRUDproject/frontend/src/components/ListAddresses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CardAddress from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListAddresses(props) {\n  _s();\n\n  const [listaddresses, setListAddresses] = useState([]); // UseEffect for updating when database changes.\n\n  useEffect(() => {\n    console.log(\"useEffect ListAddresses\");\n\n    const makeGETRequest = async () => {\n      try {\n        let res = await fetch(\"http://localhost:8000/api/list\", {\n          method: \"GET\"\n        });\n        let resJson = await res.json();\n\n        if (res.status === 200) {\n          console.log(typeof resJson);\n          setListAddresses(Object.entries(resJson));\n        } else {}\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    makeGETRequest();\n  }, [props.count]);\n\n  async function handleDelete(e) {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(\"http://localhost:8000/api/detail/\" + 3, {\n        method: \"DELETE\"\n      });\n\n      if (res.status === 200) {\n        console.log(\"Deleted card \");\n        props.setCount(count => count + 1);\n      } else {}\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  ; //   function makePOSTRequest(id) {\n  //     const requestOptions = {\n  //         method: 'DELETE',\n  //         headers: {'Content-Type':'application/json'},\n  //         body: JSON.stringify({\n  //             pk: id\n  //         }\n  //         )\n  //     };\n  //     fetch('http://localhost:8000/api/list', requestOptions).then((response) =>\n  //     response.json()\n  //     ).then((data)=> console.log(data));\n  // }\n\n  const listcards = listaddresses.map(address => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards-container\",\n    children: /*#__PURE__*/_jsxDEV(CardAddress, {\n      address: address,\n      handleDelete: handleDelete\n    }, address[0], false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: listcards\n  }, void 0, false);\n}\n\n_s(ListAddresses, \"/h6HwHP+vRFQozlUnuFO4mPGVVw=\");\n\n_c = ListAddresses;\nexport default ListAddresses;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListAddresses\");","map":{"version":3,"names":["React","useState","useEffect","CardAddress","ListAddresses","props","listaddresses","setListAddresses","console","log","makeGETRequest","res","fetch","method","resJson","json","status","Object","entries","err","count","handleDelete","e","preventDefault","setCount","listcards","map","address"],"sources":["/home/nakatinha/repos/djangoprojects/CRUD/CRUDproject/frontend/src/components/ListAddresses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport CardAddress from './Card';\n\nfunction ListAddresses(props) {\n    const [listaddresses, setListAddresses] = useState([]);\n    // UseEffect for updating when database changes.\n    useEffect (() => {\n        console.log(\"useEffect ListAddresses\")\n        const makeGETRequest = async () => {\n        try {\n          let res = await fetch(\"http://localhost:8000/api/list\", {\n            method: \"GET\",\n          });\n          let resJson = await res.json();\n          if (res.status === 200) {\n            console.log(typeof(resJson));\n            setListAddresses(Object.entries(resJson));\n          } else {   \n          }\n        } catch (err) {\n          console.log(err);\n        }\n      };\n      makeGETRequest();\n    }, [props.count]\n    )\n\n    async function handleDelete(e) {\n      e.preventDefault();\n      try {\n        let res = await fetch(\"http://localhost:8000/api/detail/\"+3, {\n          method: \"DELETE\",\n        });\n        if (res.status === 200) {\n          console.log(\"Deleted card \" )\n          props.setCount(count => count+1);\n        } else {\n        }\n      } catch (err) {\n          \n        console.log(err);\n      }\n\n    };\n  //   function makePOSTRequest(id) {\n  //     const requestOptions = {\n  //         method: 'DELETE',\n  //         headers: {'Content-Type':'application/json'},\n  //         body: JSON.stringify({\n  //             pk: id\n  //         }\n  //         )\n\n  //     };\n  //     fetch('http://localhost:8000/api/list', requestOptions).then((response) =>\n  //     response.json()\n  //     ).then((data)=> console.log(data));\n  // }\n\n    const listcards = listaddresses.map((address) => (\n      <div className=\"cards-container\">\n        <CardAddress address = {address} key = {address[0]} handleDelete = {handleDelete}/>\n      </div>\n       )\n    )\n    \n    return (\n    <>\n        {listcards}\n    </>\n    )\n}\n\nexport default ListAddresses"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,QAAxB;;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAC1B,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD,CAD0B,CAE1B;;EACAC,SAAS,CAAE,MAAM;IACbM,OAAO,CAACC,GAAR,CAAY,yBAAZ;;IACA,MAAMC,cAAc,GAAG,YAAY;MACnC,IAAI;QACF,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;UACtDC,MAAM,EAAE;QAD8C,CAAnC,CAArB;QAGA,IAAIC,OAAO,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAApB;;QACA,IAAIJ,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;UACtBR,OAAO,CAACC,GAAR,CAAY,OAAOK,OAAnB;UACAP,gBAAgB,CAACU,MAAM,CAACC,OAAP,CAAeJ,OAAf,CAAD,CAAhB;QACD,CAHD,MAGO,CACN;MACF,CAVD,CAUE,OAAOK,GAAP,EAAY;QACZX,OAAO,CAACC,GAAR,CAAYU,GAAZ;MACD;IACF,CAdC;;IAeFT,cAAc;EACf,CAlBQ,EAkBN,CAACL,KAAK,CAACe,KAAP,CAlBM,CAAT;;EAqBA,eAAeC,YAAf,CAA4BC,CAA5B,EAA+B;IAC7BA,CAAC,CAACC,cAAF;;IACA,IAAI;MACF,IAAIZ,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAoC,CAArC,EAAwC;QAC3DC,MAAM,EAAE;MADmD,CAAxC,CAArB;;MAGA,IAAIF,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;QACtBR,OAAO,CAACC,GAAR,CAAY,eAAZ;QACAJ,KAAK,CAACmB,QAAN,CAAeJ,KAAK,IAAIA,KAAK,GAAC,CAA9B;MACD,CAHD,MAGO,CACN;IACF,CATD,CASE,OAAOD,GAAP,EAAY;MAEZX,OAAO,CAACC,GAAR,CAAYU,GAAZ;IACD;EAEF;;EAAA,CAxCyB,CAyC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;EAEE,MAAMM,SAAS,GAAGnB,aAAa,CAACoB,GAAd,CAAmBC,OAAD,iBAClC;IAAK,SAAS,EAAC,iBAAf;IAAA,uBACE,QAAC,WAAD;MAAa,OAAO,EAAIA,OAAxB;MAAoD,YAAY,EAAIN;IAApE,GAAwCM,OAAO,CAAC,CAAD,CAA/C;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADgB,CAAlB;EAOA,oBACA;IAAA,UACKF;EADL,iBADA;AAKH;;GApEQrB,a;;KAAAA,a;AAsET,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}